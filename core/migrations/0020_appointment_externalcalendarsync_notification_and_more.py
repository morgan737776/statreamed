# Generated by Django 5.2.3 on 2025-06-26 13:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0019_delete_governmentintegration'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_type', models.CharField(choices=[('consultation', 'Консультация'), ('procedure', 'Процедура'), ('examination', 'Обследование'), ('therapy', 'Терапия'), ('other', 'Другое')], default='consultation', max_length=20, verbose_name='Тип приема')),
                ('start_datetime', models.DateTimeField(verbose_name='Дата и время начала')),
                ('end_datetime', models.DateTimeField(verbose_name='Дата и время окончания')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('scheduled', 'Запланирован'), ('confirmed', 'Подтвержден'), ('completed', 'Завершен'), ('cancelled', 'Отменен'), ('no_show', 'Не явился')], default='scheduled', max_length=20, verbose_name='Статус')),
                ('all_day', models.BooleanField(default=False, verbose_name='Весь день')),
                ('color', models.CharField(default='#3788d8', max_length=7, verbose_name='Цвет')),
                ('reminder_sent', models.BooleanField(default=False, verbose_name='Напоминание отправлено')),
                ('reminder_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Время напоминания')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.staff', verbose_name='Врач')),
            ],
            options={
                'verbose_name': 'Запись на прием',
                'verbose_name_plural': 'Записи на прием',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='ExternalCalendarSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('google', 'Google Calendar'), ('outlook', 'Outlook'), ('ical', 'iCal')], max_length=20, verbose_name='Провайдер')),
                ('access_token', models.TextField(blank=True, verbose_name='Access Token')),
                ('refresh_token', models.TextField(blank=True, verbose_name='Refresh Token')),
                ('calendar_id', models.CharField(blank=True, max_length=200, verbose_name='ID календаря')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('last_sync', models.DateTimeField(blank=True, null=True, verbose_name='Последняя синхронизация')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Синхронизация календаря',
                'verbose_name_plural': 'Синхронизации календарей',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('appointment_reminder', 'Напоминание о приеме'), ('treatment_reminder', 'Напоминание о лечении'), ('medication_reminder', 'Напоминание о лекарстве'), ('system', 'Системное уведомление'), ('custom', 'Пользовательское')], max_length=30, verbose_name='Тип уведомления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push-уведомление'), ('system', 'В системе')], default='system', max_length=20, verbose_name='Способ доставки')),
                ('status', models.CharField(choices=[('pending', 'Ожидает отправки'), ('sent', 'Отправлено'), ('delivered', 'Доставлено'), ('failed', 'Ошибка отправки'), ('read', 'Прочитано')], default='pending', max_length=20, verbose_name='Статус')),
                ('scheduled_for', models.DateTimeField(blank=True, null=True, verbose_name='Запланировано на')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Отправлено в')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Прочитано в')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('frequency', models.CharField(choices=[('daily', 'Ежедневно'), ('weekly', 'Еженедельно'), ('monthly', 'Ежемесячно'), ('custom', 'Пользовательский')], default='daily', max_length=20, verbose_name='Частота')),
                ('time_of_day', models.TimeField(verbose_name='Время')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Напоминание о лечении',
                'verbose_name_plural': 'Напоминания о лечении',
                'ordering': ['start_date', 'time_of_day'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='bed',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='bed',
            name='ward',
        ),
        migrations.RemoveField(
            model_name='patientadmission',
            name='bed',
        ),
        migrations.DeleteModel(
            name='Integration1C',
        ),
        migrations.RemoveField(
            model_name='patientadmission',
            name='attending_physician',
        ),
        migrations.RemoveField(
            model_name='patientadmission',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='patientadmission',
            name='doctor',
        ),
        migrations.RemoveField(
            model_name='patientadmission',
            name='patient',
        ),
        migrations.RemoveField(
            model_name='patientadmission',
            name='ward',
        ),
        migrations.RemoveField(
            model_name='medicalrecord',
            name='related_admission',
        ),
        migrations.RemoveField(
            model_name='patientdocument',
            name='patient',
        ),
        migrations.RemoveField(
            model_name='patientdocument',
            name='uploaded_by',
        ),
        migrations.RemoveField(
            model_name='specialistprofile',
            name='specializations',
        ),
        migrations.RemoveField(
            model_name='specialistprofile',
            name='user',
        ),
        migrations.DeleteModel(
            name='ZoomIntegration',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='curator',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='user',
        ),
        migrations.AddField(
            model_name='patient',
            name='allergies',
            field=models.TextField(blank=True, verbose_name='Аллергии'),
        ),
        migrations.AddField(
            model_name='patient',
            name='blood_type',
            field=models.CharField(blank=True, max_length=5, verbose_name='Группа крови'),
        ),
        migrations.AddField(
            model_name='patient',
            name='chronic_diseases',
            field=models.TextField(blank=True, verbose_name='Хронические заболевания'),
        ),
        migrations.AddField(
            model_name='patient',
            name='emergency_contact_name',
            field=models.CharField(blank=True, max_length=200, verbose_name='Контактное лицо'),
        ),
        migrations.AddField(
            model_name='patient',
            name='emergency_contact_phone',
            field=models.CharField(blank=True, max_length=20, verbose_name='Телефон контактного лица'),
        ),
        migrations.AddField(
            model_name='patient',
            name='insurance_policy',
            field=models.CharField(blank=True, max_length=50, verbose_name='Страховой полис'),
        ),
        migrations.AddField(
            model_name='patient',
            name='passport_number',
            field=models.CharField(blank=True, max_length=20, verbose_name='Номер паспорта'),
        ),
        migrations.AddField(
            model_name='patient',
            name='passport_series',
            field=models.CharField(blank=True, max_length=10, verbose_name='Серия паспорта'),
        ),
        migrations.AddField(
            model_name='patient',
            name='phone',
            field=models.CharField(blank=True, max_length=20, verbose_name='Телефон'),
        ),
        migrations.AddField(
            model_name='patient',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='patients/photos/', verbose_name='Фото'),
        ),
        migrations.AddField(
            model_name='patient',
            name='status',
            field=models.CharField(choices=[('active', 'Активен'), ('discharged', 'Выписан'), ('transferred', 'Переведен'), ('deceased', 'Умер')], default='active', max_length=20, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='medicalrecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='core.patient', verbose_name='Пациент'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='address',
            field=models.TextField(blank=True, verbose_name='Адрес'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='Email'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Пациент'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient_patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Пациент-получатель'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Получатель'),
        ),
        migrations.AddField(
            model_name='notification',
            name='related_appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.appointment', verbose_name='Связанная запись'),
        ),
        migrations.AddField(
            model_name='treatmentreminder',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Пациент'),
        ),
        migrations.AddField(
            model_name='treatmentreminder',
            name='related_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.medicalrecord'),
        ),
        migrations.DeleteModel(
            name='Bed',
        ),
        migrations.DeleteModel(
            name='Ward',
        ),
        migrations.DeleteModel(
            name='PatientAdmission',
        ),
        migrations.DeleteModel(
            name='PatientDocument',
        ),
        migrations.DeleteModel(
            name='Specialization',
        ),
        migrations.DeleteModel(
            name='SpecialistProfile',
        ),
    ]
