# -*- coding: utf-8 -*-
from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from django.contrib.auth.password_validation import validate_password
from django.core.exceptions import ValidationError
from django.core.cache import cache
from django.db import transaction
from django.conf import settings
import os
import sys


class Command(BaseCommand):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    
    help = '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--security-only',
            action='store_true',
            help='–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        )
        parser.add_argument(
            '--optimization-only',
            action='store_true',
            help='–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é',
        )
    
    def handle(self, *args, **options):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∫–æ–º–∞–Ω–¥—ã"""
        try:
            self.stdout.write(
                self.style.SUCCESS('üîß –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã...')
            )
            
            security_only = options.get('security_only', False)
            optimization_only = options.get('optimization_only', False)
            
            if not optimization_only:
                self.setup_security()
            
            if not security_only:
                self.setup_optimization()
            
            self.stdout.write(
                self.style.SUCCESS('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–∏—Å—Ç–µ–º—ã: {str(e)}')
            )
            sys.exit(1)
    
    def setup_security(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        self.stdout.write('üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        security_issues = []
        
        if settings.DEBUG:
            security_issues.append("DEBUG=True –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ")
        
        if not getattr(settings, 'SESSION_COOKIE_SECURE', False):
            security_issues.append("SESSION_COOKIE_SECURE –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å True –¥–ª—è HTTPS")
        
        if not getattr(settings, 'CSRF_COOKIE_SECURE', False):
            security_issues.append("CSRF_COOKIE_SECURE –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å True –¥–ª—è HTTPS")
        
        if not getattr(settings, 'SECURE_SSL_REDIRECT', False):
            security_issues.append("SECURE_SSL_REDIRECT –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å True –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω")
        
        if getattr(settings, 'ALLOWED_HOSTS', []) == ['*']:
            security_issues.append("ALLOWED_HOSTS –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å '*' –≤ –ø—Ä–æ–¥–∞–∫—à–Ω")
        
        # –í—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        for issue in security_issues:
            self.stdout.write(f"‚ö†Ô∏è  {issue}")
        
        if security_issues:
            self.stdout.write(f"–ù–∞–π–¥–µ–Ω–æ {len(security_issues)} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        else:
            self.stdout.write("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ")
        
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω')
        )
    
    def setup_optimization(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã"""
        self.stdout.write('‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã...')
        
        # –û—á–∏—â–∞–µ–º –∫—ç—à
        self.stdout.write('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...')
        try:
            if hasattr(cache, 'clear'):
                cache.clear()
                self.stdout.write("‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω")
            else:
                self.stdout.write("‚ö†Ô∏è  –ö—ç—à –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–µ—Ç–æ–¥ clear()")
        except Exception as e:
            self.stdout.write(f"‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        self.check_performance_settings()
        
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
        )
    
    def check_performance_settings(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        self.stdout.write('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...')
        
        performance_issues = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        databases = getattr(settings, 'DATABASES', {})
        default_db = databases.get('default', {})
        
        if default_db.get('ENGINE') == 'django.db.backends.sqlite3':
            performance_issues.append("SQLite –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–º –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
        caches = getattr(settings, 'CACHES', {})
        default_cache = caches.get('default', {})
        
        if default_cache.get('BACKEND') == 'django.core.cache.backends.dummy.DummyCache':
            performance_issues.append("DummyCache –æ—Ç–∫–ª—é—á–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        if not getattr(settings, 'USE_TZ', True):
            performance_issues.append("USE_TZ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å True")
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        for issue in performance_issues:
            self.stdout.write(f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {issue}")
        
        if not performance_issues:
            self.stdout.write("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ")
