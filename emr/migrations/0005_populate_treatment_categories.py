# Generated by Django 5.2.3 on 2025-06-19 09:00
from django.db import migrations

TREATMENT_CATEGORIES = {
    "Консультации специалистов": [
        'Консультация врача-реабилитолога (первичная)',
        'Консультация врача-реабилитолога (повторная)',
        'Консультация невролога',
        'Консультация кардиолога',
        'Консультация травматолога-ортопеда',
        'Консультация врача ЛФК',
        'Консультация физиотерапевта',
        'Консультация психотерапевта',
        'Консультация медицинского психолога',
        'Консультация логопеда-афазиолога',
        'Консультация эрготерапевта',
        'Консультация диетолога',
        'Консультация хирурга',
    ],
    "Лабораторная диагностика": [
        'Общий (клинический) анализ крови',
        'Биохимический анализ крови (базовый)',
        'Биохимический анализ крови (расширенный)',
        'Коагулограмма',
        'Анализ крови на D-димер',
        'Анализ крови на гормоны щитовидной железы',
        'Общий анализ мочи',
    ],
    "Инструментальная диагностика": [
        'Электрокардиография (ЭКГ) в 12 отведениях',
        'Холтеровское мониторирование ЭКГ (24 часа)',
        'Суточное мониторирование артериального давления (СМАД)',
        'Эхокардиография (УЗИ сердца)',
        'УЗДГ (допплерография) сосудов шеи и головного мозга',
        'УЗДГ сосудов верхних/нижних конечностей',
        'УЗИ суставов (одна группа)',
        'УЗИ органов брюшной полости',
        'Рентгенография суставов/позвоночника',
        'Компьютерная томография (КТ)',
        'Магнитно-резонансная томография (МРТ)',
        'Спирометрия',
        'Электронейромиография (ЭНМГ)',
    ],
    "Лечебная физкультура и кинезиотерапия": [
        'Индивидуальное занятие ЛФК при заболеваниях ОДА',
        'Индивидуальное занятие ЛФК при неврологических заболеваниях',
        'Групповое занятие ЛФК',
        'Механотерапия на реабилитационных тренажерах',
        'Занятие на стабилоплатформе',
        'Кинезиотерапия по методике PNF',
        'Бобат-терапия',
        'Дыхательная гимнастика по Стрельниковой/Бутейко',
        'Гидрокинезотерапия (ЛФК в бассейне)',
        'Скандинавская ходьба',
    ],
    "Физиотерапия": [
        'Магнитотерапия (общая/локальная)',
        'Лазеротерапия (включая ВЛОК, НЛОК)',
        'Электрофорез с лекарственными препаратами',
        'Амплипульстерапия (СМТ-терапия)',
        'Диадинамотерапия (ДДТ)',
        'Ультразвуковая терапия и фонофорез',
        'УВЧ-терапия',
        'Дарсонвализация',
        'Криотерапия (локальная)',
        'Баротерапия (барокамера)',
        'Грязелечение (пелоидотерапия)',
        'Водолечение (гидротерапия)',
        'Прессотерапия (лимфодренаж)',
    ],
    "Массаж": [
        'Медицинский массаж (1.5 ед - 15 мин)',
        'Медицинский массаж (общий, 60 мин)',
        'Лимфодренажный массаж (ручной)',
        'Точечный массаж (шиацу)',
    ],
    "Психологическая, нейропсихологическая и логопедическая помощь": [
        'Индивидуальное занятие с логопедом (восстановление речи)',
        'Индивидуальное занятие с логопедом (восстановление глотания)',
        'Нейропсихологическая диагностика',
        'Нейропсихологическая коррекция (индивидуальная)',
        'Индивидуальная психотерапия (когнитивно-поведенческая)',
        'Арт-терапия (групповая)',
        'Эрготерапия: восстановление бытовых навыков',
    ],
    "Медикаментозное лечение (классы препаратов)": [
        'НПВС (нестероидные противовоспалительные средства)',
        'Анальгетики центрального действия',
        'Миорелаксанты',
        'Ноотропы и нейропротекторы',
        'Препараты для улучшения микроциркуляции',
        'Антикоагулянты и антиагреганты',
        'Хондропротекторы',
        'Витамины группы B (нейротропные)',
        'Седативные препараты и антидепрессанты',
    ],
    "Рекомендации и режим": [
        'Соблюдение диеты (Стол №9)',
        'Соблюдение диеты (Стол №10)',
        'Ортопедический режим',
        'Ношение ортопедического корсета/ортеза',
    ]
}

def populate_categories_and_link_items(apps, schema_editor):
    TreatmentCategory = apps.get_model('emr', 'TreatmentCategory')
    TreatmentItem = apps.get_model('emr', 'TreatmentItem')
    db_alias = schema_editor.connection.alias

    for category_name, item_names in TREATMENT_CATEGORIES.items():
        category, created = TreatmentCategory.objects.using(db_alias).get_or_create(name=category_name)
        TreatmentItem.objects.using(db_alias).filter(name__in=item_names).update(category=category)

def unpopulate_categories(apps, schema_editor):
    TreatmentCategory = apps.get_model('emr', 'TreatmentCategory')
    db_alias = schema_editor.connection.alias
    category_names = list(TREATMENT_CATEGORIES.keys())
    TreatmentCategory.objects.using(db_alias).filter(name__in=category_names).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('emr', '0004_treatmentcategory_alter_treatmentitem_options_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_categories_and_link_items, reverse_code=unpopulate_categories),
    ]
